<?php

/**
 * @file
 * Contains smmg_coupon.module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\node\NodeInterface;
use Drupal\small_messages\Utility\Helper;

/**
 * Implements hook_help().
 */
function smmg_coupon_help($route_name, RouteMatchInterface $route_match)
{
    switch ($route_name) {
        // Main module help for the smmg_coupon module.
        case 'help.page.smmg_coupon':
            $output = '';
            $output .= '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('Coupon Module for Small Messages') . '</p>';
            return $output;

        default:
    }
}

/**
 * Implements hook_theme().
 */
function smmg_coupon_theme()
{
    return [
        'smmg_coupon' => [
            'render element' => 'children',
        ],
    ];
}


/**
 * Implements hook_form_alter().
 */
function smmg_coupon_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{

    // Coupon Order
    // --------------------------------------
    if (in_array($form_id, ['node_coupon_order_edit_form', 'node_coupon_order_form'])) {


        // if Token field empty fill in automaticaly
        $token = Helper::generateToken();
        $form['field_smmg_token']['widget'][0]['value']['#default_value'] = $token;

        // Automatic Fill Title Field
        $form['title']['#access'] = FALSE;
        $form['#entity_builders'][] = 'custom_coupon_node_title_builder';
    }

    // Coupon Unit
    // --------------------------------------
    if (in_array($form_id, ['node_coupon_unit_edit_form', 'node_coupon_unit_form'])) {


        // Automatic Fill Title Field
        $form['title']['#access'] = FALSE;
        $form['#entity_builders'][] = 'coupon_unit_title_builder';
    }
}


/**
 * Implements hook_inline_entity_form_table_fields_alter().
 */
function smmg_coupon_inline_entity_form_table_fields_alter(&$fields, $context)
{

    $coupon_unit = false;

    foreach ($context ['allowed_bundles'] as $bundle) {

        if ($bundle == 'coupon_unit') {
            $coupon_unit = TRUE;
        }
    }

    if ($coupon_unit) {

        // This line removes the title field. you're looking to do this, just with the status instead of title field
        unset($fields['title']);
        unset($fields['label']);
        unset($fields['status']);

        // Add Coupon Fields

        // Coupon Number
        $fields['field_coupon_number'] = [
            'type' => 'field',
            'label' => t('Number'),
            'weight' => 100
        ];

        //  Coupon Amount
        $fields['field_coupon_amount'] = [
            'type' => 'field',
            'label' => t('Amount'),
            'weight' => 101,
            'display_options' => [
                'type' => 'entity_reference_label',
                'settings' => ['link' => FALSE],
            ],
        ];
    }


}


/**
 * Implements hook_mail().
 * @param $key
 * @param $message
 * @param $params
 */
function smmg_coupon_mail($key, &$message, $params)
{

    switch ($key) {


        case 'EMAIL_PLAIN':

            $message['from'] = $params['from'];
            $message['subject'] = $params['title'];
            $message['body'][] = $params['message_plain'];
            break;


        case 'EMAIL_SMTP' :

            $message['from'] = $params['from'];
            $message['subject'] = $params['title'];
            $message['headers'] = [
                'MIME-Version' => '1.0',
                'Content-Type' => "multipart/alternative",
                'Content-Transfer-Encoding' => '8Bit',
                'X-Mailer' => 'Drupal',
            ];
            $message['body'][] = "\r\n--\r\n";
            $message['body'][] = 'Content-Type: text/plain; charset=utf-8;';
            $message['body'][] = $params['message_plain'];
            $message['body'][] = "\r\n--\r\n";
            $message['body'][] = "Content-Type: text/html; charset=utf-8;";
            $message['body'][] = $params['message_html'];
            $message['body'][] = "\r\n-- --\r\n";
            break;
    }

}

/**
 * Implements hook_node_access().
 *
 * @param NodeInterface $node
 * @param $op
 * @param AccountInterface $account
 * @return mixed
 */
function smmg_coupon_node_access(NodeInterface $node, $op, AccountInterface $account)
{
    $restricted_bundles = ['coupon_order', 'coupon_unit'];
    $role_id = 'smmg_coupon';

    $bundle_id = $node->bundle();
    $roles = $account->getRoles();

    // Default checks
    if (!is_object($node)) {
        return AccessResult::neutral();
    } else {

        // block http://example.com/node/123
        $parameter_node = \Drupal::routeMatch()->getRawParameter('node');

        if ($op == 'view' && $parameter_node == $node->id() && in_array($bundle_id, $restricted_bundles) ) {

            // Allow for admin roles
            if (in_array($bundle_id, $restricted_bundles) && in_array($role_id, $roles)) {
                return AccessResult::neutral();

            } else {
                // Restrict access to full node for others
                return AccessResult::forbidden();
            }
        }
    }

    // Default
    return AccessResult::neutral();
}


/**
 * Title builder for Coupon content type.
 *
 * @param $entity_type
 * @param \Drupal\node\NodeInterface $node
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @throws Exception
 */
function custom_lesson_node_title_builder($entity_type, NodeInterface $node, $form, FormStateInterface $form_state)
{
    $config = \Drupal::config('smmg_coupon.settings');
    $coupon_name = $config->get('coupon_name_singular');

    $first_name = '';
    $last_name = '';

    if (!empty($node)) {
        $first_name = Helper::getFieldValue($node, 'first_name');
        $last_name = Helper::getFieldValue($node, 'last_name');
    }



// Build Title
    $node->setTitle($coupon_name . ' - ' . $first_name . ' ' . $last_name);
}

/**
 * Title builder for Coupon content type.
 *
 * @param $entity_type
 * @param \Drupal\node\NodeInterface $node
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function coupon_unit_title_builder($entity_type, NodeInterface $node, $form, FormStateInterface $form_state)
{
    $node->setTitle('Coupon Unit');
    $amount_list = Helper::getTermsByID('coupon_amount');

    $config = \Drupal::config('smmg_coupon.settings');
    $suffix = $config->get('suffix');

    $number = '';
    $amount = '';

    if (!empty($node)) {
        $number = Helper::getFieldValue($node, 'coupon_number');
        $amount = Helper::getFieldValue($node, 'coupon_amount', $amount_list);
    }


// Build Title
    $node->setTitle($number . ' Ã— ' . $amount . ' ' . $suffix);
}